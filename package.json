{
  "name": "discourser",
  "version": "2.1.0",
  "description": "Discourse API Client written in TypeScript for Node.js and Browser environments",
  "homepage": "https://github.com/bevry/discourser",
  "license": "Artistic-2.0",
  "keywords": [
    "api",
    "browser",
    "client",
    "comment",
    "discourse",
    "es2018",
    "export-default",
    "module",
    "node",
    "typed",
    "types",
    "typescript"
  ],
  "badges": {
    "list": [
      "githubworkflow",
      "npmversion",
      "npmdownloads",
      "---",
      "githubsponsors",
      "thanksdev",
      "patreon",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "---",
      "discord",
      "twitch"
    ],
    "config": {
      "githubWorkflow": "bevry",
      "githubSponsorsUsername": "balupton",
      "thanksdevGithubUsername": "bevry",
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist",
      "discordServerID": "1147436445783560193",
      "discordServerInvite": "nQuXddV7VP",
      "twitchUsername": "balupton",
      "githubUsername": "bevry",
      "githubRepository": "discourser",
      "githubSlug": "bevry/discourser",
      "npmPackageName": "discourser"
    }
  },
  "funding": "https://bevry.me/fund",
  "author": "2020+ Benjamin Lupton <b@lupton.cc> (https://balupton.com)",
  "maintainers": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)"
  ],
  "contributors": [
    "Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)",
    "Lucian Buzzo (https://github.com/LucianBuzzo)"
  ],
  "bugs": {
    "url": "https://github.com/bevry/discourser/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevry/discourser.git"
  },
  "engines": {
    "node": ">=18"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "source",
      "entry": "index.ts",
      "tags": [
        "source",
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ES2022 for web browsers with Import for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "tags": [
        "compiled",
        "javascript",
        "import"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    },
    {
      "description": "TypeScript compiled against ES2018 for Node.js with Require for modules",
      "directory": "edition-es2018",
      "entry": "index.js",
      "tags": [
        "compiled",
        "javascript",
        "es2018",
        "require"
      ],
      "engines": {
        "node": "18 || 20 || 21",
        "browsers": false
      }
    },
    {
      "description": "TypeScript compiled against ES2018 for Node.js with Import for modules",
      "directory": "edition-es2018-esm",
      "entry": "index.js",
      "tags": [
        "compiled",
        "javascript",
        "es2018",
        "import"
      ],
      "engines": {
        "node": "18 || 20 || 21",
        "browsers": false
      }
    }
  ],
  "bin": "bin.cjs",
  "types": "./compiled-types/",
  "type": "module",
  "main": "edition-es2018/index.js",
  "exports": {
    "node": {
      "import": "./edition-es2018-esm/index.js",
      "require": "./edition-es2018/index.js"
    },
    "browser": {
      "import": "./edition-browsers/index.js"
    }
  },
  "browser": "edition-browsers/index.js",
  "module": "edition-browsers/index.js",
  "dependencies": {
    "duration-timestamp": "^2.26.0",
    "errlop": "^7.2.0",
    "native-promise-pool": "^3.23.0",
    "regexp.escape": "^1.1.0"
  },
  "devDependencies": {
    "@bevry/links": "^2.14.0",
    "@bevry/update-contributors": "^1.23.0",
    "@types/node": "^20.9.2",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "assert-helpers": "^11.4.0",
    "eslint": "^8.54.0",
    "eslint-config-bevry": "^5.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jsdom": "^22.1.0",
    "kava": "^7.2.0",
    "prettier": "^3.1.0",
    "projectz": "^3.2.0",
    "surge": "^0.24.6",
    "typedoc": "^0.25.3",
    "typescript": "5.2.2",
    "valid-directory": "^4.4.0",
    "valid-module": "^2.4.0"
  },
  "scripts": {
    "our:bin": "node ./bin.cjs",
    "our:clean": "rm -rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:edition-browsers && npm run our:compile:edition-es2018 && npm run our:compile:edition-es2018-esm && npm run our:compile:types",
    "our:compile:edition-browsers": "tsc --module ESNext --target ES2022 --outDir ./edition-browsers --project tsconfig.json && ( test ! -d edition-browsers/source || ( mv edition-browsers/source edition-temp && rm -rf edition-browsers && mv edition-temp edition-browsers ) )",
    "our:compile:edition-es2018": "tsc --module commonjs --target ES2018 --outDir ./edition-es2018 --project tsconfig.json && ( test ! -d edition-es2018/source || ( mv edition-es2018/source edition-temp && rm -rf edition-es2018 && mv edition-temp edition-es2018 ) ) && printf '%s' '{\"type\": \"commonjs\"}' > edition-es2018/package.json",
    "our:compile:edition-es2018-esm": "tsc --module ESNext --target ES2018 --outDir ./edition-es2018-esm --project tsconfig.json && ( test ! -d edition-es2018-esm/source || ( mv edition-es2018-esm/source edition-temp && rm -rf edition-es2018-esm && mv edition-temp edition-es2018-esm ) ) && printf '%s' '{\"type\": \"module\"}' > edition-es2018-esm/package.json",
    "our:compile:types": "tsc --project tsconfig.json --emitDeclarationOnly --declaration --declarationMap --declarationDir ./compiled-types && ( test ! -d compiled-types/source || ( mv compiled-types/source edition-temp && rm -rf compiled-types && mv edition-temp compiled-types ) )",
    "our:deploy": "printf '%s\n' 'no need for this project'",
    "our:meta": "npm run our:meta:contributors && npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:contributors": "update-contributors",
    "our:meta:docs": "npm run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -rf ./docs && typedoc --exclude '**/+(*test*|node_modules)' --excludeExternals --out ./docs ./source",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep \"v$npm_package_version\" || (printf '%s\n' \"add a changelog entry for v$npm_package_version\" && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (printf '%s\n' 'proper changelog entry not found' && exit -1) && git tag \"v$npm_package_version\" -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:module && npm run our:verify:prettier",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
    "our:verify:module": "valid-module",
    "our:verify:prettier": "prettier --write .",
    "test": "node ./edition-es2018/test.js",
    "start": "env TZ=Etc/UTC npm run our:compile:edition-es2018 && node bin.js"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ],
    "rules": {
      "camelcase": 0,
      "no-inner-declarations": 0,
      "no-dupe-class-members": 1,
      "class-methods-use-this": 0,
      "func-style": 0
    }
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "trailingComma": "all"
  },
  "boundation": {
    "nodeVersionsRange": ">=18",
    "type": "package",
    "targets": [
      "ES2018"
    ]
  }
}